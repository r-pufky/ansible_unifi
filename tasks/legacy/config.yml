---
# yamllint disable rule:line-length
###############################################################################
# Configure UniFi Legacy (Network Server)
###############################################################################
# Stop UniFi during service reconfiguration (required by system.properties).
# Query auto-generated configuration settings and inject them into config if
# role values are not set. Unifi will re-write and inject comments in this file
# on start.
#
# Reference:
# * https://help.ui.com/hc/en-us/articles/205202580-Explaining-the-UniFi-system-properties-File
# yamllint enable rule:line-length

- name: 'Legacy | config | stop services'
  ansible.builtin.systemd:
    name: '{{ item }}'
    state: 'stopped'
  failed_when: false
  loop:
    - 'unifi.service'

- name: 'Legacy | config | query existing config'
  ansible.builtin.slurp:
    src: '{{ _unifi_srv_legacy_enable._properties }}'
  register: _unifi_properties

- name: 'Legacy | config | parse auto-generated settings'
  ansible.builtin.set_fact:
    _unifi_cfg_legacy_properties_reporter_uuid: '{{
        _unifi_cfg_legacy_properties_reporter_uuid |
        combine({"_auto":
            _unifi_properties.content | b64decode | split |
            select("match", "^reporter-uuid") | first | split("=") | last})
      }}'
    _unifi_cfg_legacy_properties_uuid: '{{
        _unifi_cfg_legacy_properties_uuid |
        combine({"_auto":
            _unifi_properties.content | b64decode | split |
            select("match", "^uuid") | first | split("=") | last})
      }}'

- name: 'Legacy | config | update config map'
  ansible.builtin.set_fact:
    _unifi_map: '{{
        hostvars[inventory_hostname] | dict2items |
        selectattr("key", "match", "_unifi_cfg_legacy_properties_*")
      }}'

# yamllint disable rule:line-length
- name: 'Legacy | config | auto-generated UUIDs ⓘ'
  when: >
    _unifi_cfg_legacy_properties_reporter_uuid.raw == '' or
    _unifi_cfg_legacy_properties_uuid.raw == ''
  ansible.builtin.debug:
    msg: |
      ╭───────────────────────────────────────────────────────────────────╮
      │                                                                   │
      │                   Autogenerated UUIDs detected.                   │
      │                                                                   │
      ├───────────────────────────────────────────────────────────────────╯
      │ Set auto-generated UUID's to ensure consistent deployments.
      │
      │ Reporter UUID: {{ _unifi_cfg_legacy_properties_reporter_uuid._auto }}
      │ unifi_cfg_legacy_properties_reporter_uuid: {{ _unifi_cfg_legacy_properties_reporter_uuid.raw }}
      │
      │ System UUID: {{ _unifi_cfg_legacy_properties_uuid._auto }}
      │ unifi_cfg_legacy_properties_uuid: {{ _unifi_cfg_legacy_properties_uuid.raw }}
# yamllint enable rule:line-length

- name: 'Legacy | config | set unifi config'
  ansible.builtin.template:
    src: 'system.properties.j2'
    dest: '{{ _unifi_srv_legacy_enable._properties }}'
    owner: '{{ _unifi_cfg_legacy_user._uid }}'
    group: '{{ _unifi_cfg_legacy_group._gid }}'
    mode: '0644'

- name: 'Legacy | config | set service drop-in'
  ansible.builtin.include_role:
    name: 'r_pufky.deb.systemd'
  vars:
    systemd_daemon_reload_enable: true
    systemd_services:
      - name: 'unifi'
        state: 'present'
        drop_in: true
        service: {}
        exec:
          user: '{{ _unifi_cfg_legacy_user.raw }}'
